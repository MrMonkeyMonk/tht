#!/bin/bash

# If the current user doesn't have docker permissions run with sudo
SUDO=''	
if [ ! -w "/var/run/docker.sock" ]; then	
	SUDO="sudo --preserve-env "	
fi

docker_cmd=(
    "docker" "container" "run"
    "--rm"
    "--interactive"
    "--tty"
    "--hostname" "$(hostname)"
    "--init"
    "--pid" "host"
    "--mount" "source=/etc/localtime,destination=/etc/localtime,type=bind"
    "--mount" "source=/var/run/docker.sock,destination=/var/run/docker.sock,type=bind"
    "--mount" "source=/,destination=/host,type=bind"
    "--workdir" "/host/$(pwd)"
)

# create and use a persistent volume
$SUDO docker volume create tht_zsh-cache >/dev/null && \
    docker_cmd+=("--mount" "source=tht_zsh-cache,destination=/usr/local/share/zsh/,type=volume")

# volume mount repo scripts for development
# TODO proper argument parsing
if [ "$1" = "--dev" ]; then
    # TODO loop through dynamically to prevent having to update on ever tool addition
    docker_cmd+=(
        "-v" "$(pwd)/bin/conn-summary:/usr/local/bin/conn-summary"
        "-v" "$(pwd)/bin/filter:/usr/local/bin/filter"
        "-v" "$(pwd)/bin/zv:/usr/local/bin/zv"
    )
    # these cause issues currently
    #  -v "$(pwd)/zsh/.zshrc:/root/.zshrc"
    #  -v "$(pwd)/zsh/site-functions:/usr/local/share/zsh/site-functions/"
fi

image=ethack/tht
# switch to ghcr.io if dockerhub fails due to rate limits
#image=ghcr.io/ethack/tht
# TODO proper argument parsing
if [ "$1" = "--pull" ]; then
  echo "Downloading latest THT image..."
  $SUDO docker pull "$image"
fi
$SUDO "${docker_cmd[@]}" "$image"
