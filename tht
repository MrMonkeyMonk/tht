#!/bin/bash

IMAGE=ethack/tht
# switch to ghcr.io if dockerhub fails due to rate limits
#IMAGE=ghcr.io/ethack/tht

# If the current user doesn't have docker permissions run with sudo
DOCKER=docker
if [ ! -w "/var/run/docker.sock" ]; then	
    DOCKER="sudo --preserve-env docker"	
fi

docker_cmd=(
    "container" "run"
    "--rm"
    "--interactive"
    "--tty"
    "--hostname" "$(hostname)"
    "--init"
    "--pid" "host"
    "--mount" "source=/etc/localtime,destination=/etc/localtime,type=bind"
    "--mount" "source=/var/run/docker.sock,destination=/var/run/docker.sock,type=bind"
    "--mount" "source=/,destination=/host,type=bind"
    "--workdir" "/host/$(pwd)"
)

while [ $# -gt 0 ]; do
    case $1 in
    update|pull|--pull)
        echo "Downloading latest THT image..."
        $DOCKER pull $IMAGE
        SUDO=
        if [ ! -w "$0" ]; then
            SUDO="sudo"
        fi
        echo "Self-updating THT script..."
        $SUDO curl -s https://raw.githubusercontent.com/ethack/tht/main/tht > "$0"
        shift
        # run the updated script instead with the same parameters minus the one that triggered the update
        exec "$0" "$@"
    ;;
    dev|--dev)
        # change to directory this script is in, following any symlinks
        pushd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" > /dev/null
        if [ -d "bin" ]; then
            # loop through dynamically to prevent having to update on ever tool addition
            while IFS=  read -r -d $'\0' PROG; do
                # volume mount repo scripts for development
                docker_cmd+=("--mount" "source=$(pwd)/${PROG},destination=/usr/local/${PROG},type=bind")
            done < <(find bin -type f -print0 2>/dev/null)
        fi
        popd > /dev/null
    ;;
    esac
    shift
done

# create and use a persistent volume
$DOCKER volume create tht_zsh-cache >/dev/null && \
    docker_cmd+=("--mount" "source=tht_zsh-cache,destination=/usr/local/share/zsh/,type=volume")

$DOCKER "${docker_cmd[@]}" "$IMAGE"
